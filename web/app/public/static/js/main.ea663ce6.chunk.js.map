{"version":3,"sources":["UserLogin.js","MessageView.js","ChatView.js","App.js","reportWebVitals.js","index.js"],"names":["UserLogin","props","handleSubmit","bind","state","username","e","preventDefault","FormData","target","get","this","setState","renderChatView","Row","Col","md","Form","className","onSubmit","Group","Label","Control","type","placeholder","name","Button","variant","Component","MessageView","user","time","message","usertype","justifycontent","ChatView","render","submitMessage","messages","questions","original_questions","question_idx","usersession","$","value","console","log","push","fetch","method","body","redirect","then","response","text","result","JSON","parse","alert","catch","error","onClick","renderFirstView","image","controlId","as","rows","parsed_response","submitParsingFeedback","compute_response","submitComputationFeedback","messagelist","cont","length","displayQ","idx","icon","faPaperPlane","size","faMicrophone","ImageView","src","URL","createObjectURL","alt","App","renderLoginView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea663ce6.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Form, Button, Row, Col} from 'react-bootstrap'\n\nimport './UserLogin.css'\n\nclass UserLogin extends Component {\n\n    constructor(props) {\n        super(props);\n        // State to store uploaded file\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            username : null\n        };\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault();\n        let data = new FormData(e.target);\n        let username = data.get('username')\n        this.setState({\n            'username': username\n        });\n        this.props.renderChatView(username, 'some-session');\n    }\n    \n    render() {\n        return (\n            <Row>\n                <Col md={2}></Col>\n                <Col md={8}>\n                    <Form className=\"user-login\" onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Row>\n                                <Col>\n                                    <Form.Label>What do people call you ?</Form.Label>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col></Col>\n                                <Col md={10}>\n                                    <Form.Control type=\"text\" placeholder=\"\" name=\"username\"/>\n                                </Col>\n                                <Col></Col>\n                            </Row>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Start Chatting\n                        </Button>\n                    </Form>\n                </Col>\n                <Col md={2}></Col>\n            </Row>\n\n        );\n    }\n}\n\nexport default UserLogin;","import React, {Component} from \"react\";\nimport {Form, Button, Row, Col} from 'react-bootstrap'\n\nimport './MessageView.css';\n\n\nclass MessageView extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user : this.props.username?this.props.username:'Unknown',\n            time : this.props.time,\n            message : this.props.message,\n            usertype : this.props.usertype?this.props.usertype:'bot'\n        };\n        if(this.state.usertype === 'bot') {\n            this.setState({\n                user : 'MenteeBot'\n            });\n        }\n    }\n\n    render() {\n        let justifycontent = 'justify-content-start';\n        if( this.state.usertype == 'user') {\n            justifycontent = 'justify-content-end'\n        }\n        return (\n            <Row>\n                <Row className={justifycontent}>\n                    <Col className=\"message-row\" md={8}>\n                    <Row className=\"message-meta-row justify-content-between\">\n                        <Col md={4} className=\"message-name\">{this.state.user}</Col>\n                        <Col md={4} className=\"message-date\">{this.state.time}</Col>\n                    </Row>\n                    <Row className=\"message-data-row\">\n                        <Col className=\"message\">{this.state.message}</Col>\n                    </Row>\n                    </Col>\n                </Row>\n            </Row>\n        )\n    }\n}\n\nexport default MessageView;\n","import React, {Component} from \"react\";\nimport {Form, Button, Row, Col} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPaperPlane, faMicrophone } from '@fortawesome/free-solid-svg-icons'\nimport $ from \"jquery\";\n\nimport './ChatView.css';\nimport MessageView from './MessageView';\n\n\nclass ChatView extends Component {\n\n    constructor(props) {\n        super(props)\n        this.render = this.render.bind(this);\n        this.submitMessage = this.submitMessage.bind(this);\n        this.state = {\n            messages : [\n            ],\n            questions: [\n                \"What's the most recent concern that has been in your mind? Elaborate.\"\n            ],\n            original_questions : [\n                \"Whats your mood been like this past month? Sad? Worthless? Hopeless?\",\n                \"How do you picture yourself right now? Elaborate.\",\n                \"What is your sleep pattern? Do you find troubles falling asleep? \",\n                \"How has your appetite been in the past month? Are you eating normally?\",\n                \"How would you describe your level of interest or motivation while completing daily activities? Elaborate.\",\n                \"How is your physical health according to you? Elaborate.\",\n                \"Have you easily felt rejected or criticized by others? How do you respond when that happens? Elaborate.\"\n            ],\n            question_idx : 0,\n            username : props.username,\n            usersession : props.usersession,\n        };\n    }\n\n    submitMessage(e) {\n       let message = $('.message-text-area')[0].value;\n       console.log(message);\n       let messages = this.state.messages;\n       messages.push(message);\n\n       let questions = this.state.questions;\n       questions.push(this.state.original_questions[this.state.question_idx]);\n       this.setState(\n           {\n               messages,\n               questions,\n               question_idx : ++this.state.question_idx,\n           }\n       )\n       $('.message-text-area')[0].value = '';\n    }\n    \n    submitParsingFeedback(e){\n        var requestOptions = {\n            method: 'POST',\n            body: {\n                'feedback' : \"some feedback\"\n            },\n            redirect: 'follow'\n        };\n        let self = this;\n        fetch(\"/compute_feedback\", requestOptions)\n        .then(response => response.text())\n        .then((result) => {\n            result = JSON.parse(result);\n            alert(result.message);\n        })\n        .catch((error) => {\n            console.log('error', error);\n            alert(\"Error while submitting feedback, please try again later.\");\n        });  \n    }\n\n    submitComputationFeedback(e){\n        var requestOptions = {\n            method: 'POST',\n            body: {\n                'feedback' : \"some feedback\"\n            },\n            redirect: 'follow'\n        };\n        let self = this;\n        fetch(\"/parse_feedback\", requestOptions)\n        .then(response => response.text())\n        .then((result) => {\n            result = JSON.parse(result);\n            alert(result.message);\n        })\n        .catch((error) => {\n            console.log('error', error);\n            alert(\"Error while submitting feedback, please try again later.\");\n        });\n    }\n\n    renderabc() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-2\">\n                        <Button variant=\"outline-primary\" \n                        onClick={()=>{this.props.renderFirstView()}}>\n                            Back\n                        </Button>\n                    </div>\n                    <div className=\"col-md-10 justify-content-center\">\n                        <h2>RESULT</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {/* image div*/}\n                    <div className=\"col-md-6 justify-content-center image-container\">\n                        <ImageView image={this.props.image}/>\n                    </div>\n                    {/* data div*/}\n                    <div className=\"col-md-6\">\n                        <div className=\"row justify-content-center\">\n                            <Form>\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Label>Parsed Value from Image</Form.Label>\n                                        <Form.Control as=\"textarea\" rows={6}>\n                                            {this.props.parsed_response}\n                                        </Form.Control>\n                                    <Button variant=\"outline-danger\" \n                                    onClick={(e)=>{this.submitParsingFeedback(e)}}>\n                                        Submit Parsing feedback\n                                    </Button>\n                                </Form.Group>\n                            </Form>\n                        </div>\n                        <div className=\"row justify-content-center\">\n                            <Form>\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Label>Result for Image</Form.Label>\n                                        <Form.Control as=\"textarea\" rows={6}>\n                                            {this.props.compute_response}\n                                        </Form.Control>\n                                    <Button variant=\"outline-danger\" \n                                    onClick={(e)=>{this.submitComputationFeedback(e)}}>\n                                        Submit Computation feedback\n                                    </Button>\n                                </Form.Group>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        let messagelist = [];\n        console.log('messages from state', this.state.messages)\n        let cont = (this.state.messages.length > 0 || this.state.questions.length > 0);\n        let displayQ = true;\n        let idx = 0;\n        while(cont) {\n            if(displayQ) {\n                messagelist.push(\n                    <MessageView \n                        username='MenteeBot' \n                        message={this.state.questions[idx]} \n                        time='10:26:45'\n                        usertype='bot'\n                    />\n                )\n            }else{\n                if(this.state.messages.length > idx) {\n                    messagelist.push(\n                        <MessageView \n                            username={this.state.username} \n                            message={this.state.messages[idx]} \n                            time='10:26:45'\n                            usertype='user'\n                        />\n                    )\n                }\n                idx++\n            }\n            displayQ = !displayQ;\n            cont = (this.state.questions.length > idx || this.state.messages.length > idx);\n        }\n        return (\n            <div>\n                <Row className=\"banner-row align-top\">\n                    <Col md={10}></Col>\n                    <Col md={2}>\n                        <Button variant=\"outline-danger\">Logout</Button>\n                    </Col>\n                </Row>\n                <Row className=\"message-log-row\">\n                    <ul className=\"container\">{messagelist}</ul>\n                </Row>\n                <Row className=\"message-send align-bottom\">\n                    <Col md={10}>\n                        <Form.Control className=\"message-text-area\" as=\"textarea\" rows={5}></Form.Control>\n                    </Col>\n                    <Col md={1}>\n                        <span className=\"send-button\" onClick={this.submitMessage}>\n                            <FontAwesomeIcon icon={faPaperPlane} size=\"2x\"/>\n                        </span>\n                    </Col>\n                    <Col md={1}>\n                        <span className=\"voice-button\">\n                            <FontAwesomeIcon icon={faMicrophone} size=\"2x\"/>\n                        </span>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst ImageView = ({ image }) => {\n    return <img className=\"render-file\" src={URL.createObjectURL(image)} alt={image.name} />;\n};\n\nexport default ChatView;\n","// export default App;\nimport React, {Component} from \"react\";\n\nimport './App.css';\nimport UserLogin from './UserLogin';\nimport ChatView from './ChatView';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username : null,\n      usersession: null\n    };\n  }\n\n  renderChatView(username, usersession){\n    this.setState({ username, usersession});\n  }\n\n  renderLoginView(){\n    this.setState({ \n      username : null \n    });\n  }\n  \n  render() {\n    let {username} = this.state;\n    const renderView = (()=> {\n      if(username === null){\n        return <UserLogin renderChatView={\n          (username, usersession)=>{\n            this.renderChatView(username, usersession)}\n          }/>\n      } else{\n        return <ChatView username={this.state.username} usersession={this.state.usersession} \n        renderLoginView={()=>{this.renderLoginView()}}/>\n      }\n    })\n    return (\n      <div className=\"App\">\n        <div className=\"App-header container\">\n        {renderView()}         \n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}